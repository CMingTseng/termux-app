apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    lintOptions {
        abortOnError false
    }
    defaultConfig {
        applicationId "com.termux"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 80
        versionName "0.80"
    }

    signingConfigs {
        debug {
            storeFile file('dev_keystore.jks')
            keyAlias 'alias'
            storePassword 'xrj45yWGLbsO7W0v'
            keyPassword 'xrj45yWGLbsO7W0v'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    implementation project(":terminal-view")
    implementation project(":terminal-service")

    implementation "androidx.annotation:annotation:1.0.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.viewpager:viewpager:1.0.0"
    implementation "androidx.drawerlayout:drawerlayout:1.0.0"
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
}

task versionName {
    doLast {
        print android.defaultConfig.versionName
    }
}



//afterEvaluate {
//    android.applicationVariants.all { variant ->
//        variant.javaCompileProvider.get().dependsOn(downloadBootstraps)
//    }
//}

